import pandas as pd
import streamlit as st
import plotly.express as px
import plotly.graph_objects as go


df = pd.read_csv("diabetes_binary_5050split_health_indicators_BRFSS2015.csv")
st.set_page_config(page_title="EDA", layout="wide")

st.markdown(
    """
    <style>
    @keyframes gradientMove {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
    .banner {
        background: linear-gradient(270deg, #34495e, #aab7b8, #839192, #34495e);
        background-size: 600% 600%;
        animation: gradientMove 10s ease infinite;
        color: white;
        padding: 30px;
        text-align: center;
        border-radius: 15px;
        margin-bottom: 20px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    </style>
    """,
    unsafe_allow_html=True
)

st.markdown("<div class='banner'><h1>An√°lisis Exploratorio de los Datos</h1><p></p></div>", unsafe_allow_html=True)

st.markdown("""
    <h3 style="
        text-align: left; 
        font-size: 28px;
        font-weight: bold;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
    ">
        Caracter√≠sticas del Set de Datos para la predicci√≥n de Diabetes
    </h3>
""", unsafe_allow_html=True)

st.write("""Este dataset contiene informaci√≥n sobre factores de riesgo y comportamientos relacionados con la salud, como presi√≥n arterial, colesterol, actividad f√≠sica, dieta, acceso a atenci√≥n m√©dica y m√°s. Estas caracter√≠sticas son √∫tiles para analizar y predecir el riesgo de enfermedades cr√≥nicas, como la diabetes, y para identificar patrones de comportamiento relacionados con la salud. Cada columna tiene un prop√≥sito espec√≠fico y est√° dise√±ada para capturar informaci√≥n relevante sobre el estilo de vida y la salud de las personas.""")



descripciones = {
    "HighBP ‚ù§Ô∏è‚Äçü©π": """**Descripci√≥n:** Indica si la persona tiene presi√≥n arterial alta.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** La presi√≥n arterial alta es un factor de riesgo importante para enfermedades cardiovasculares y diabetes.""",
    "HighChol üçî": """**Descripci√≥n:** Indica si la persona tiene colesterol alto.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** El colesterol alto est√° asociado con un mayor riesgo de enfermedades card√≠acas y accidentes cerebrovasculares.""",
    "CholCheck üíâ": """**Descripci√≥n:** Indica si la persona se ha realizado un chequeo de colesterol en los √∫ltimos 5 a√±os.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** Muestra si la persona est√° al tanto de su nivel de colesterol, lo cual es importante para la prevenci√≥n de enfermedades.""",
    "BMI ‚öñÔ∏è": """**Descripci√≥n:** Es una medida que relaciona el peso y la altura de una persona para determinar si tiene un peso saludable.  
**F√≥rmula:** BMI = peso (kg) / (altura (m))^2.  
**Valores:** N√∫mero decimal (por ejemplo, 24.5).  
**Relevancia:** Un BMI alto est√° asociado con un mayor riesgo de diabetes, enfermedades card√≠acas y otras condiciones de salud.""",
    "Smoker üö¨": """**Descripci√≥n:** Indica si la persona ha fumado m√°s de 100 cigarrillos en toda su vida.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** Fumar es un factor de riesgo importante para enfermedades respiratorias, cardiovasculares y c√°ncer.""",
    "Stroke üíî": """**Descripci√≥n:** Indica si la persona ha sufrido un accidente cerebrovascular.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** Los accidentes cerebrovasculares est√°n relacionados con la presi√≥n arterial alta, el colesterol alto y otros factores de riesgo.""",
    "HeartDiseaseorAttack ‚ù§Ô∏è‚Äçü©∫": """**Descripci√≥n:** Indica si la persona ha tenido una enfermedad coronaria o un ataque al coraz√≥n.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** Las enfermedades card√≠acas son una de las principales causas de muerte y est√°n relacionadas con la diabetes y otros factores de riesgo.""",
    "PhysActivity üèÉ‚Äç‚ôÇÔ∏è": """**Descripci√≥n:** Indica si la persona ha realizado actividad f√≠sica en los √∫ltimos 30 d√≠as.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** La actividad f√≠sica reduce el riesgo de enfermedades cr√≥nicas como la diabetes y las enfermedades card√≠acas.""",
    "Fruits üçé": """**Descripci√≥n:** Indica si la persona consume al menos una fruta por d√≠a.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** Una dieta rica en frutas est√° asociada con un menor riesgo de enfermedades cr√≥nicas.""",
    "Veggies ü•¶ ": """**Descripci√≥n:** Indica si la persona consume vegetales al menos una vez al d√≠a.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** El consumo de vegetales es importante para una dieta saludable y la prevenci√≥n de enfermedades.""",
    "HvyAlcoholConsump üç∑": """**Descripci√≥n:** Indica si la persona es un consumidor habitual de alcohol en grandes cantidades.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** El consumo excesivo de alcohol est√° relacionado con problemas de salud como enfermedades hep√°ticas y cardiovasculares.""",
    "AnyHealthcare üè•": """**Descripci√≥n:** Indica si la persona tiene acceso a un seguro m√©dico.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** El acceso a atenci√≥n m√©dica es crucial para la prevenci√≥n y el tratamiento de enfermedades.""",
    "NoDocbcCost üí∏": """**Descripci√≥n:** Indica si la persona necesit√≥ visitar al m√©dico en el √∫ltimo a√±o pero no pudo hacerlo debido al costo.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** Muestra barreras econ√≥micas para el acceso a la atenci√≥n m√©dica.""",
    "GenHlth üè•": """**Descripci√≥n:** Es una autoevaluaci√≥n de la salud general de la persona en una escala del 1 al 5.  
**Valores:**  
- 1: Excelente.  
- 2: Muy buena.  
- 3: Buena.  
- 4: Regular.  
- 5: Mala.  
**Relevancia:** La percepci√≥n de la salud general es un indicador importante del bienestar.""",
    "MentHlth üß†": """**Descripci√≥n:** N√∫mero de d√≠as en los √∫ltimos 30 en los que la persona sinti√≥ que su salud mental no estuvo bien.  
**Valores:** Entero entre 0 y 30.  
**Relevancia:** La salud mental es un componente clave del bienestar general.""",
    "PhysHlth üí™": """**Descripci√≥n:** N√∫mero de d√≠as en los √∫ltimos 30 en los que la persona sinti√≥ que su salud f√≠sica no estuvo bien.  
**Valores:** Entero entre 0 y 30.  
**Relevancia:** La salud f√≠sica est√° relacionada con la capacidad para realizar actividades diarias.""",
    "DiffWalk üö∂‚Äç‚ôÇÔ∏è": """**Descripci√≥n:** Indica si la persona tiene dificultades para caminar o subir escaleras.  
**Valores:**  
- 1: S√≠.  
- 0: No.  
**Relevancia:** Puede ser un indicador de problemas de movilidad o enfermedades cr√≥nicas.""",
    "Sex üöπ / üö∫": """**Descripci√≥n:** G√©nero de la persona.  
**Valores:**  
- 1: Masculino.  
- 0: Femenino.  
**Relevancia:** Algunas enfermedades tienen diferentes prevalencias seg√∫n el g√©nero.""",
    "Age üëµüë∂": """**Descripci√≥n:** Edad de la persona.  
**Valores:** Entero (por ejemplo, 30).  

**1:** 18 a 24 a√±os

**2:** 25 a 29 a√±os

**3:** 30 a 34 a√±os

**4:** 35 a 39 a√±os

**5:** 40 a 44 a√±os

**6:** 45 a 49 a√±os

**7:** 50 a 54 a√±os

**8:** 55 a 59 a√±os

**9:** 60 a 64 a√±os

**10:** 65 a 69 a√±os

**11:** 70 a 74 a√±os

**12:** 75 a 79 a√±os

**13:** Mayores de 79 a√±os

**Relevancia:** La edad es un factor de riesgo importante para muchas enfermedades cr√≥nicas.""",
    "Education üéì": """**Descripci√≥n:** Nivel de educaci√≥n de la persona.  
**Valores:**  
- 1: Nunca asisti√≥ a la escuela o solo jard√≠n de infantes.  
- 2: Grados 1 a 8 (Primaria).  
- 3: Grados 9 a 11 (Alguna escuela secundaria).  
- 4: Grado 12 o GED (Graduado de escuela secundaria).  
- 5: Universidad 1 a 3 a√±os (Alguna universidad o escuela t√©cnica).  
- 6: Universidad 4 a√±os o m√°s (Graduado universitario).  
**Relevancia:** El nivel de educaci√≥n puede influir en el acceso a informaci√≥n sobre salud y h√°bitos saludables.""",
    "Income üí∞": """**Descripci√≥n:** Nivel de ingresos anuales de la persona.  
**Valores:**  
- 1: <‚Ç¨10K.  
- 2: <‚Ç¨15K.  
- 3: <‚Ç¨20K.  
- 4: <‚Ç¨25K.  
- 5: <‚Ç¨35K.  
- 6: <‚Ç¨50K.  
- 7: <‚Ç¨75K.  
- 8: ‚Ç¨75K+.  
**Relevancia:** Los ingresos pueden afectar el acceso a atenci√≥n m√©dica y h√°bitos de vida saludables."""
}




descripciones_items = list(descripciones.items())


for i in range(0, len(descripciones_items), 3):
    cols = st.columns(3)
    for j, (columna, descripcion) in enumerate(descripciones_items[i:i+3]):
        with cols[j]:
            with st.expander(columna):
                st.markdown(descripcion)
                
st.dataframe(df)

with st.expander("Ver descripci√≥n estad√≠sticas del DataFrame"):
    st.write(df.describe())
    

with st.expander("Conteo de valores duplicados"):
    st.write(df.duplicated().sum())
    st.write("Estos valores han sido eliminados para el entrenamiento del modelo")
    
with st.expander("Validaci√≥n de valores nulos"):
    st.write(df.isnull().mean()*100)
    st.write("Este dataset no cuenta con valores nulos")
    
with st.expander("Aseguramos que los valores sean formato INT"):
    st.code("""
        cols = ["Diabetes_binary","HighBP", "HighChol", "CholCheck", "Smoker", "Stroke", 
               "HeartDiseaseorAttack", "PhysActivity", "Fruits", "Veggies", 
               "HvyAlcoholConsump", "AnyHealthcare", "NoDocbcCost", 
               "DiffWalk", "Sex","GenHlth", "MentHlth", "PhysHlth", "Age", "Education", "Income",'BMI']
df[cols] = df[cols].astype(int)""")
    
st.markdown("""
    <h3 style="
        text-align: left; 
        font-size: 28px;
        font-weight: bold;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
    ">
        An√°lisis Univariante del Set de Datos
    </h3>
""", unsafe_allow_html=True)




col1, col2 = st.columns(2)


with col1:

    chart_type_hist = st.radio('Selecciona el tipo de gr√°fico para visualizaciones', ['Histogram', 'Scatter'])


    column_hist = st.selectbox('Selecciona una columna para visualizar', 
                               ['BMI', 'MentHlth', 'PhysHlth', 'Age', 'Education', 'Income'])


    if chart_type_hist == 'Histogram':
        fig_hist = px.histogram(df, x=column_hist, marginal='rug', title=f'Distribuci√≥n de {column_hist}')
    elif chart_type_hist == 'Scatter':
        fig_hist = px.scatter(df, x=column_hist, title=f'Distribuci√≥n de {column_hist}')


    st.plotly_chart(fig_hist)


with col2:

    chart_type_pie = st.radio('Selecciona el tipo de gr√°fico para visualizaciones de caracter√≠sticas binarias', ['Pastel', 'Barras'])


    column_pie = st.selectbox('Selecciona una caracter√≠stica binaria para visualizar', 
                              ['HighBP', 'HighChol', 'CholCheck', 'Smoker',
                               'Stroke', 'HeartDiseaseorAttack', 'PhysActivity', 'Fruits', 'Veggies',
                               'HvyAlcoholConsump', 'AnyHealthcare', 'NoDocbcCost', 'GenHlth',
                               'DiffWalk', 'Sex', 'Diabetes_binary'])


    if chart_type_pie == 'Pastel':
        fig_pie = px.pie(df, names=column_pie, title=f'Distribuci√≥n de {column_pie}')
    
    elif chart_type_pie == 'Barras':

        pie_grouped = df.groupby(column_pie).size().reset_index(name='count')
        pie_grouped['Percentage'] = pie_grouped['count'] / pie_grouped['count'].sum() * 100
        fig_pie = px.bar(pie_grouped, x=column_pie, y='Percentage', title=f'Distribuci√≥n de {column_pie}', labels={'Percentage': 'Percentage'})

    st.plotly_chart(fig_pie)
    
st.markdown("""
    <h3 style="
        text-align: left; 
        font-size: 28px;
        font-weight: bold;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
    ">
        An√°lisis Bivariante del set de Datos
    </h3>
""", unsafe_allow_html=True)

gender_filter = st.radio('Selecciona el g√©nero', ['Hombre', 'Mujer'])


if gender_filter == 'Hombre':
    data_filtered = df[df['Sex'] == 1]
else:
    data_filtered = df[df['Sex'] == 0]


diabetes_filter = st.radio('Selecciona el estado de diabetes', ['Diab√©tico', 'No Diab√©tico', 'Todos'])


if diabetes_filter == 'Diab√©tico':
    data_filtered = data_filtered[data_filtered['Diabetes_binary'] == 1]
elif diabetes_filter == 'No Diab√©tico':
    data_filtered = data_filtered[data_filtered['Diabetes_binary'] == 0]


columns = ['Age', 'Education', 'Income', 'BMI', 'MentHlth', 'PhysHlth']
group_column = st.selectbox('Selecciona una columna para agrupar', columns)


diabetic_grouped = data_filtered.groupby(group_column).size().reset_index(name='count')
diabetic_grouped['Percentage'] = diabetic_grouped['count'] / diabetic_grouped['count'].sum() * 100


fig = px.bar(diabetic_grouped, x=group_column, y='Percentage',
             labels={'Percentage': 'Percentage of Diabetics'},
             title=f'Percentage of Diabetics by {group_column.capitalize()} ({gender_filter}, {diabetes_filter})')

st.plotly_chart(fig)


# Definir las columnas espec√≠ficas que quieres incluir
columnas = ['HighBP', 'HighChol', 'BMI', 'GenHlth', 'DiffWalk', 'Sex', 'Age', 'Diabetes_binary']  # Sustituye por las columnas que deseas

# Filtrar el DataFrame para mantener solo las columnas seleccionadas
filtered_df = df[columnas]

# Filtrar solo las columnas num√©ricas
numeric_filtered_df = filtered_df.select_dtypes(include=['number'])

# Calcular la matriz de correlaciones de Spearman
spearman_corr = numeric_filtered_df.corr(method='spearman')

# Crear una figura de Plotly para la matriz de correlaciones
fig = go.Figure(data=go.Heatmap(
    z=spearman_corr.values,
    x=spearman_corr.columns,
    y=spearman_corr.columns,
    colorscale='RdBu',
    zmin=-1, zmax=1,
    text=spearman_corr.values,
    texttemplate='%{text:.2f}',
    textfont={"size":14},
    showscale=True
))

# T√≠tulo de la aplicaci√≥n
st.markdown("""
    <h3 style="
        text-align: left; 
        font-size: 28px;
        font-weight: bold;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
    ">
        Matriz de Correlaci√≥n
    </h3>
""", unsafe_allow_html=True)

# Mostrar el gr√°fico en la aplicaci√≥n
st.plotly_chart(fig)